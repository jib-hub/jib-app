{"version":3,"sources":["img/jib_logo_dark_600.png","img/jib_logo_light_600.png","img sync /^/.//.*$","theme/light.js","theme/dark.js","components/breakpoints/BreakPoints.js","components/breakpoints/RespondTo.js","GlobalStyle.js","components/common/NavLinkTheme.js","services/history.js","components/common/ThemeSwitcher.js","components/containers/Body.js","components/containers/Wrapper.js","components/common/PrimaryButton.js","components/pages/StartPage.js","components/pages/AboutPage.js","components/pages/GalleryImgView.js","components/pages/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","LightTheme","light","backgroundColor","primaryColor","secondaryColor","ThemeSwitcherGradient","DarkTheme","dark","BreakPoints","xs","sm","md","lg","RespondTo","reduce","accumulator","label","css","GlobalStyle","createGlobalStyle","props","theme","NavLinkTheme","styled","NavLink","history","createBrowserHistory","ThemeSwitcher","div","Body","attrs","className","Wrapper","this","width","children","React","Component","PrimaryButton","Button","color","StartPage","speed","loop","Delay","ms","to","pathname","state","AboutPage","onClick","GalleryImgView","src","require","match","params","img","App","name","email","message","handleToggleTheme","setState","event","target","value","preventDefault","console","log","Navbar","expand","NavbarBrand","logoDark","logoLight","alt","Nav","navbar","NavItem","path","render","exact","component","ErrorPage","onSubmit","handleSubmit","bind","method","htmlFor","type","onChange","onNameChange","aria-describedby","onEmailChange","rows","onMessageChange","Boolean","window","location","hostname","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5c775deb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jib_logo_dark_600.43d74a9c.png\";","module.exports = __webpack_public_path__ + \"static/media/jib_logo_light_600.db002360.png\";","var map = {\n\t\"./jib_logo_dark_600.png\": 23,\n\t\"./jib_logo_light_600.png\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","const LightTheme = {\n  id: 'light',\n  light: true,\n  backgroundColor: '#e2e2e2',\n  primaryColor: '#2f2f2f',\n  secondaryColor: 'orange',\n  ThemeSwitcherGradient: 'linear-gradient(#39598A, #79D7ED)'\n};\n\nexport default LightTheme;\n","const DarkTheme = {\n  id: 'dark',\n  dark: true,\n  backgroundColor: '#2f2f2f',\n  primaryColor: '#e2e2e2',\n  secondaryColor: 'yellow',\n  ThemeSwitcherGradient: 'linear-gradient(#091236, #1E215D)'\n};\n\nexport default DarkTheme;\n","export const BreakPoints = {\n\txs: '480px',\n\tsm: '768px',\n\tmd: '992px',\n\tlg: '1200px'\n};\n","import { css } from 'styled-components';\nimport { BreakPoints } from './BreakPoints';\n\nexport const RespondTo = Object.keys(BreakPoints).reduce((accumulator, label) => {\n\taccumulator[label] = (...args) => css`\n\t\t@media (min-width: ${BreakPoints[label]}) {\n\t\t\t${css(...args)};\n\t\t}\n\t`;\n\treturn accumulator;\n}, {});\n","import {createGlobalStyle}  from 'styled-components';\nimport { RespondTo } from './components/breakpoints/RespondTo';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    transition: all 0.3s linear;\n    background: ${props => props.theme.backgroundColor} !important;\n    margin: 10;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: ${props => props.theme.primaryColor};\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  img {\n    max-width: 30%;\n  }\n\n  header {\n    padding 0 0 30px 0;\n  }\n\n  .content-bodyÂ {\n    padding-top: 4em;\n  }\n  .boxed {\n    margin: 0 auto;\n    width: 80%;\n    ${RespondTo.xs`\n    `}\n    ${RespondTo.sm`\n      text-align: center;\n    `}\n    ${RespondTo.md`\n      max-width: 900px;\n    `}\n    ${RespondTo.lg`\n      width: 70%;\n    `}\n  }\n  .fullWidth {\n    width: 100%;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'reactstrap';\n\nexport const NavLinkTheme = styled(NavLink)`\n  a{ color: ${props => props.theme.primaryColor} !important;}\n  a:hover{\n    color: ${props => props.theme.secondaryColor} !important;\n    text-decoration: none;\n  }\n`;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import styled from 'styled-components';\n\nconst ThemeSwitcher = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  background: none;\n  width: 2rem;\n  height: 0.875rem;\n  margin: 0 auto;\n  border-radius: 15px;\n  border: 2px solid ${props => props.theme.primaryColor};\n  padding: 0;\n  overflow: hidden;\n  cursor: pointer;\n  div {\n    width: 0.7rem;\n    height: 0.7rem;\n    border: none;\n    border-radius: 100%;\n    transition: all 0.3s linear;\n    &:first-child {\n      background: ${props => props.theme.primaryColor};\n      transform: ${props => props.theme.light ? 'translateX(0)' : 'translateX(100px)'};\n    }\n    &:nth-child(2) {\n      background: ${props => props.theme.primaryColor};\n      transform: ${props => props.theme.light ? 'translateX(-100px)' : 'translateX(0)'};\n    }\n  }\n  &:hover {\n    border: 2px solid ${props => props.theme.secondaryColor};\n  }\n  &:hover {\n    div {background: ${props => props.theme.secondaryColor};}}\n`;\n\nexport default ThemeSwitcher\n","import styled from 'styled-components';\n\nconst Body = styled.div.attrs({\n  className: 'content-body'\n})`\n  margin:0;\n  padding:0;\n`;\n\n\nexport default Body;\n","import React from 'react';\n\n\nclass Wrapper extends React.Component {\n    render(props){\n      return (\n      <div className= {this.props.width} >\n        {this.props.children}\n      </div>\n      )\n    }\n};\n\nexport default Wrapper;\n","import {Button} from 'reactstrap';\nimport styled from 'styled-components';\n\nconst PrimaryButton = styled(Button).attrs({\n  color: 'primary'\n})`\n  background: ${props => props.theme.backgroundColor} !important;\n  color: ${props => props.theme.primaryColor} !important;\n  border-color: ${props => props.theme.primaryColor} !important;\n  &:hover{\n    border-color: ${props => props.theme.secondaryColor} !important;\n    color: ${props => props.theme.secondaryColor} !important;\n  }\n`;\n\nexport default PrimaryButton\n","import React from 'react';\n//import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Typing from 'react-typing-animation';\n\nimport Wrapper from '../containers/Wrapper';\nimport PrimaryButton from '../common/PrimaryButton';\n\nclass StartPage extends React.Component {\n    render(props){\n      return (\n      <div>\n      <Wrapper width=\"boxed\" >\n      <Typing speed={50} loop={false}><h1>Hello!<Typing.Delay ms={600} /> I am Julian,<Typing.Delay ms={600} /> webdeveloper and artist.</h1></Typing>\n      </Wrapper>\n      <Wrapper width=\"fullWidth\">\n      dawda\n      </Wrapper>\n      <Wrapper width=\"boxed\" >\n      <Link to ={{\n        pathname: \"/about\",\n        state: {\n            theme: this.props.theme\n        }\n      }} ><PrimaryButton>more infos</PrimaryButton></Link>\n      </Wrapper>\n      </div>\n      )\n    }\n};\n\n\nexport default StartPage;\n","import React from 'react';\n//import styled from 'styled-components';\n\nimport Wrapper from '../containers/Wrapper';\nimport PrimaryButton from '../common/PrimaryButton';\n\nclass AboutPage extends React.Component {\n    render(props){\n      return (\n      <Wrapper width=\"boxed\">\n      <PrimaryButton onClick={this.props.onClick}>New Primary Button</PrimaryButton>\n      <PrimaryButton onClick={this.props.onClick}>New Primary Button</PrimaryButton>\n      </Wrapper>\n      )\n    }\n};\n\n\nexport default AboutPage;\n","import React from 'react';\n\nimport Wrapper from '../containers/Wrapper';\n\nclass GalleryImgView extends React.Component  {\n  render(){\n    return (\n      <Wrapper width=\"boxed\">\n      <img src={require(`../../img/${this.props.match.params.img}`)} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default GalleryImgView;\n","import React from 'react';\n//import styled from 'styled-components';\n\nclass Error extends React.Component {\n    render(props){\n      return (\n      <div>\n      ERROR 404\n      </div>\n      )\n    }\n};\n\n\nexport default Error;\n","import React, {Component, Fragment } from 'react';\n\nimport logoDark from './img/jib_logo_dark_600.png';\nimport logoLight from './img/jib_logo_light_600.png';\nimport {ThemeProvider} from 'styled-components';\nimport LightTheme from './theme/light';\nimport DarkTheme from './theme/dark';\n\nimport styled from 'styled-components';\nimport { GlobalStyle } from './GlobalStyle';\n\nimport { Navbar, NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { NavLinkTheme } from './components/common/NavLinkTheme';\n\nimport { Route, Switch, Link } from 'react-router-dom';\nimport history from './services/history';\n\nimport ThemeSwitcher from './components/common/ThemeSwitcher';\n\nimport Body from './components/containers/Body';\n\nimport StartPage from './components/pages/StartPage';\nimport AboutPage from './components/pages/AboutPage';\nimport GalleryImgView from './components/pages/GalleryImgView';\nimport ErrorPage from './components/pages/ErrorPage';\n\nclass App extends Component {\n  state = {\n    theme: LightTheme,\n  \tname: '',\n  \temail: '',\n  \tmessage: ''\n  };\n  handleToggleTheme = () => {\n    this.setState({\n      theme: this.state.theme.id === 'light' ? DarkTheme : LightTheme\n    });\n  }\n  onNameChange(event) {\n\tthis.setState({name: event.target.value});\n  }\n\n  onEmailChange(event) {\n\tthis.setState({email: event.target.value});\n  }\n\n  onMessageChange(event) {\n\tthis.setState({message: event.target.value});\n  }\n\n  handleSubmit( event ) {\n    event.preventDefault();\n    console.log(this.state);\n  }\n\n  render(){\n    console.log('test: '+this.state.theme.id);\n    return (\n    <div className=\"App\">\n    <ThemeProvider theme={this.state.theme}>\n\n      <header className=\"App-header\">\n        <Fragment>\n         <Navbar expand=\"md\">\n\n           <NavbarBrand>\n           <Link to ={{\n             pathname: \"/\",\n             state: {\n                 theme: this.state.theme\n             }\n           }} ><img src={this.state.theme.id === 'light' ? logoDark : logoLight} className=\"App-logo\" alt=\"logo\" /></Link>\n           </NavbarBrand>\n           <Nav className=\"ml-auto\" navbar>\n             <NavItem className=\"d-flex align-items-center\">\n              <NavLinkTheme>\n              <Link to ={{\n                pathname: \"/\",\n                state: {\n                    theme: this.state.theme\n                }\n              }} >Home</Link>\n              </NavLinkTheme>\n             </NavItem>\n             <NavItem className=\"d-flex align-items-center\">\n               <NavLinkTheme>\n               <Link to ={{\n                pathname: \"/about\",\n                state: {\n                    theme: this.state.theme\n                }\n              }} >About</Link>\n               </NavLinkTheme>\n             </NavItem>\n             <NavItem className=\"d-flex align-items-center\">\n               <NavLinkTheme>\n               <Link to ={{\n                pathname: \"/img/jib_logo_dark_600.png\",\n                state: {\n                    theme: this.state.theme\n                }\n              }} >Img</Link>\n               </NavLinkTheme>\n             </NavItem>\n             <NavItem className=\"d-flex align-items-center\">\n             <ThemeSwitcher onClick={this.handleToggleTheme} >\n             <div></div>\n             <div></div>\n             </ThemeSwitcher>\n             </NavItem>\n            </Nav>\n         </Navbar>\n        </Fragment>\n      </header>\n      <Body>\n      <Switch history={history} >\n          <Route path=\"/\" render={ props => (<StartPage onClick={this.handleToggleTheme}/>) } exact />\n          <Route path=\"/about\" render={ props => (<AboutPage onClick={this.handleToggleTheme}/>) }/>\n          <Route path=\"/img/:img\" component={GalleryImgView} />\n          <Route component={ErrorPage} />\n      </Switch>\n      </Body>\n      <div>\n      <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n       <div className=\"form-group\">\n           <label htmlFor=\"name\">Name</label>\n           <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\n       </div>\n       <div className=\"form-group\">\n           <label htmlFor=\"exampleInputEmail1\">Email address</label>\n           <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n       </div>\n       <div className=\"form-group\">\n           <label htmlFor=\"message\">Message</label>\n           <textarea className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\n       </div>\n       <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n       </form>\n      </div>\n      <GlobalStyle />\n    </ThemeProvider>\n    </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}